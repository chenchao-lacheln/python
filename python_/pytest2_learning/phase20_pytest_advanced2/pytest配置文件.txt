
pytest.ini是什么？

    pytest.ini是pytest的配置文件
    可以修改pytest的默认行为
    不能使用任何中文符号，包括汉字、空格、引号、冒号等等

为什么用pytest.ini

        修改用例的命名规则
        配置日志格式，比代码配置更方便
        添加标签，防止运行过程报警告错误
        指定执行目录
        排除搜索目录

pytest配置————改变运行规则

    ;执行check开头和test_ 开头的所有的文件，后面一定要加*
    python_files = check_* test_*
    ;执行所有的以Tes t和Check开头的类
    python_classes = Test* Check*
    ;执行所有以test和check开头的方法
    python_functions= test_* check_*

pytest配置————添加默认参数

    addopts = -vs --alluredir ./results

pytest配置————指定/忽略执行目录

    ;设置执行路径
    ;testpaths = bilibili baidu
    ;忽略某些文件/目录
    ;norecursedirs = result logs datas test_demo*

pytest配置————日志
    使用方法： logging.info()

    配置参考链接: https://ceshiren.com/t/topic/13105
        [pytest]
        ;日志开关 true false
        log_cli = true
        ;日志级别
        log_cli_level = info
        ;打印详细日志，相当于命令行加 -vs
        addopts = --capture=no
        ;日志格式
        log_cli_format = %(asctime)s [%(levelname)s] %(message)s (%(filename)s:%(lineno)s)
        ;日志时间格式
        log_cli_date_format = %Y-%m-%d %H:%M:%S

        ;上面的日志会输出到屏幕上，下面的日志是输出到文件上

        ;日志文件位置
        log_file = ./log/test.log
        ;日志文件等级
        log_file_level = info
        ;日志文件格式
        log_file_format = %(asctime)s [%(levelname)s] %(message)s (%(filename)s:%(lineno)s)
        ;日志文件日期格式
        log_file_date_format = %Y-%m-%d %H:%M:%S

pytest配置————动态生成log文件的名称

        @pytest.fixture(scope="session", autouse=True)
        def manage_logs(request):
            """Set log file name same as test name"""
            now = time.strftime("%Y-%m-%d %H-%M-%S")
            log_name = 'output/log/' + now + '.logs'

            request.config.pluginmanager.get_plugin("logging-plugin") \
                .set_log_path(return_path(log_name))

pytest配置总结

    1.修改用例的命名规则
    2.配置日志格式，比代码配置更方便
    3.指定执行目录
    4.排除搜索目录
    5.添加标签，防止运行过程报警告错误
    6.添加默认参数