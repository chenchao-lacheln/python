# 配置文件
# 放在项目的根目录下，起到一个全局配置的作用
;pytest --help 可以查看pytest的功能
[pytest]

;;1.自己定义python文件开头名称
;;通过pytest去制定命令，发现没有识别到测试用例
;;python_files = check_*
;;后面加一个test_*就可以兼容test的执行命令，就可以进行识别了
;python_files = check_* test_*
;
;;2.给命令行增加默认参数,  pytest 等于pytest -vs
;addopts = -vs

;3.日志
;日志开关 true false
log_cli = true
;日志级别
log_cli_level = info
;打印详细日志，相当于命令行加 -vs
addopts = --capture=no
;日志格式
log_cli_format = %(asctime)s [%(levelname)s] %(message)s (%(filename)s:%(lineno)s)
;日志时间格式
log_cli_date_format = %Y-%m-%d %H:%M:%S
;日志文件位置
log_file = ./log/test.log
;日志文件等级
log_file_level = info
;日志文件格式
log_file_format = %(asctime)s [%(levelname)s] %(message)s (%(filename)s:%(lineno)s)
;日志文件日期格式
log_file_date_format = %Y-%m-%d %H:%M:%S